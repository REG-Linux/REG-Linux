#!/bin/bash

BOOTCONF="/boot/system-boot.conf"
REBOOT_FLAG=/var/run/emulationstation-standalone
log="/userdata/system/logs/display.log"

if test "$1" = "--stop-rebooting"
then
    rm -f "${REBOOT_FLAG}"
    exit 0
fi

# flag to reboot at each stop
# es is stopped : in case of crash, in case of some options are changed (language, video mode)
touch "${REBOOT_FLAG}" || exit 1

# environment
export HOME=/userdata/system

batocera-switch-screen-checker --init

GAMELAUNCH=1
while test -e "${REBOOT_FLAG}"
do
    ### lang settings
    settings_lang="$(batocera-settings-get system.language)"
    [ -z "${settings_lang}" ] && settings_lang=en_US
    export LC_ALL="${settings_lang}.UTF-8"
    export LANG=${LC_ALL}
    ###################

    ### video output ###
    # because of xinerama breaking es, enable only one screen at a time
    # /var/run/switch_screen_request is a file to request screen switch
    if test -e "/var/run/switch_screen_request"
    then
        settings_output=$(cat "/var/run/switch_screen_request")
	settings_output2=
	settings_output3=
        rm "/var/run/switch_screen_request"
    else
	settings_output="$(batocera-settings-get global.videooutput)"
	settings_output2="$(batocera-settings-get global.videooutput2)"
	settings_output3="$(batocera-settings-get global.videooutput3)"
    fi

    # we set the output to enable screens...
    batocera-resolution setOutput "${settings_output}" "${settings_output2}" "${settings_output3}" # empty or invalid values defaults to the first valid
    ###################

    ### rotation ###
    display_rotate=
    #Â try to find a rotation for the custom output
    effective_output=$(batocera-resolution currentOutput)
    if test -n "${effective_output}"
    then
	    display_rotate=$(/usr/bin/batocera-settings-get-master "display.rotate.${effective_output}")
    fi

    if test -z "${display_rotate}"
    then
	    display_rotate="$(/usr/bin/batocera-settings-get-master display.rotate)"
    fi

    if test -n "${effective_output}" && test -n "${display_rotate}"
    then
        if batocera-resolution supportSystemRotation
        then
            batocera-resolution setRotation "${display_rotate}"
        else
            # when no rotation is available by the system, apply it
            EXTRA_OPTS="--screenrotate ${display_rotate}"
        fi
    fi

    # other screens
    if test -n "${settings_output2}"
    then
	display_rotate2="$(/usr/bin/batocera-settings-get display.rotate2)"
        if batocera-resolution supportSystemRotation
        then
            batocera-resolution --screen "${settings_output2}" setRotation "${display_rotate2}"
	fi
    fi
    if test -n "${settings_output3}"
    then
	display_rotate3="$(/usr/bin/batocera-settings-get display.rotate3)"
        if batocera-resolution supportSystemRotation
        then
            batocera-resolution --screen "${settings_output3}" setRotation "${display_rotate3}"
	fi
    fi
    ###################

    ### resolution ###
    ## the resolution for the first screen is on the boot file so that it is easier to change it
    ## it is not needed for other screens
    bootresolution="$(batocera-settings-get-master -f "$BOOTCONF" es.resolution)"
    if test -z "${bootresolution}"
    then
	    batocera-resolution minTomaxResolution-secure
    else
	    batocera-resolution setMode "${bootresolution}"
    fi

    # other screens
    if test -n "${settings_output2}"
    then
	bootresolution2="$(batocera-settings-get es.resolution2)"
	if test -z "${bootresolution2}"
	then
	    batocera-resolution --screen "${settings_output2}" minTomaxResolution-secure
	else
	    batocera-resolution --screen "${settings_output2}" setMode "${bootresolution2}"
	fi
    fi
    if test -n "${settings_output3}"
    then
	bootresolution3="$(batocera-settings-get es.resolution3)"
	if test -z "${bootresolution3}"
	then
	    batocera-resolution --screen "${settings_output3}" minTomaxResolution-secure
	else
	    batocera-resolution --screen "${settings_output3}" setMode "${bootresolution3}"
	fi
    fi

    # now that all screens are enabled, rotated, resized... we reenable cause it may change the position in case of multi screens
    if test -n "${settings_output2}" -o -n "${settings_output3}"
    then
	batocera-resolution setOutput "${settings_output}" "${settings_output2}" "${settings_output3}" # empty or invalid values defaults to the first valid
    fi

    CUSTOMESOPTIONS="$(/usr/bin/batocera-settings-get es.customsargs)"

    # launch automatically a game only the first time
    if test ${GAMELAUNCH} = 1
    then
	   GAMELAUNCHOPT=
    else
	    GAMELAUNCHOPT="--no-startup-game"
    fi

    # save the current output in which es is started (used to switch screen, when unplugged)
    batocera-resolution currentOutput > "/var/run/switch_screen_current"

    # dbus launch is required for the gio/gvfs/trash:///...
    eval "$(dbus-launch --sh-syntax --exit-with-session)"

    # Stop splash
    if [ ! $(pgrep -x sway) ]
    then
        /etc/init.d/S00plymouth stop
    fi

    cd /userdata # es need a PWD
    %REGLINUX_EMULATIONSTATION_PREFIX% emulationstation ${GAMELAUNCHOPT} --exit-on-reboot-required %REGLINUX_EMULATIONSTATION_ARGS% ${CUSTOMESOPTIONS}

    # es flag when rebooting (https://github.com/batocera-linux/batocera-emulationstation/blob/master/es-core/src/platform.cpp#L194)
    if test -e "/tmp/restart.please" -o -e "/tmp/shutdown.please"
    then
	    rm -f "${REBOOT_FLAG}"
    fi

    GAMELAUNCH=0
done
exit 0
