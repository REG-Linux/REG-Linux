from systemFiles import CONF, LOGDIR
from os import path

GZDOOM_CONFIG_DIR = CONF + '/gzdoom'
GZDOOM_CONFIG_PATH = GZDOOM_CONFIG_DIR + '/gzdoom.ini'
GZDOOM_LOG_PATH = LOGDIR + '/gzdoom.log'
GZDOOM_SCRIPT_PATH = GZDOOM_CONFIG_DIR + '/gzdoom.cfg'
GZDOOM_SOUND_FONT_PATH = GZDOOM_CONFIG_DIR + '/soundfonts'
GZDOOM_FM_BANKS_PATH = GZDOOM_CONFIG_DIR + '/fm_banks'
GZDOOM_ARCH_PATH = '/usr/share/reglinux/system.arch'

from utils.logger import get_logger
eslog = get_logger(__name__)

def setGzdoomConfig(system, rom):
    if system.isOptSet("gz_api"):
        gzdoom_api = system.config["gz_api"]
    else:
        gzdoom_api = "0"

    # RPi4 workaround which has both ligl & libgles
    # For arm systems, we want to force OpenGL ES - 3
    if gzdoom_api == "0":
        with open(GZDOOM_ARCH_PATH, "r") as file:
            content = file.read().strip()
            if not content == "x86_64":
                gzdoom_api = "3"

    # now set the config
    extra_config = ""
    if gzdoom_api == "3":
        extra_config = (
            "gl_es 1\n"
            "vid_preferbackend 3\n"
            # This setting greatly improves performance:
            "gles_use_mapped_buffer true\n"
        )
    else:
        extra_config = (f"vid_preferbackend {gzdoom_api}\n")

    # A script file with console commands that are always ran when a game starts
    with open(GZDOOM_SCRIPT_PATH, "w") as script:
        script.write(
            "# This file is automatically generated by gzdoomGenerator.py\n"
            # In the code, logfile does not appear to be created unless done so explicitly
            f"logfile {GZDOOM_LOG_PATH}\n"
            f"vid_fps {'true' if system.getOptBoolean('showFPS') else 'false'}\n"
            f"{extra_config}"
            "echo REG-Linux\n"  # easy check that script ran in console
        )

    # check the directory name is in the ini file
    if not path.exists(GZDOOM_CONFIG_PATH):
        with open(GZDOOM_CONFIG_PATH, "w") as file:
            file.write(
                '[IWADSearch.Directories]\n'
                'Path=/userdata/roms/gzdoom\n'
                '[FileSearch.Directories]\n'
                'Path=/userdata/roms/gzdoom\n'
                '[SoundfontSearch.Directories]\n'
                "Path=" + GZDOOM_SOUND_FONT_PATH + "\n"
                "Path=" + GZDOOM_FM_BANKS_PATH + "\n"
                '[GlobalSettings]\n'
            )
    else:
        # configparser wasn't working on the default ini file (non-compliant)
        # it's not a true ini file, use this crude method instead
        line_to_add = "Path=" + path.dirname(rom) +"\n"
        with open(GZDOOM_CONFIG_PATH, "r") as file:
            lines = file.readlines()
            if line_to_add not in lines:
                for i in range(len(lines)):
                    if lines[i] == "[IWADSearch.Directories]\n":
                        lines.insert(i+1, line_to_add)
                    if lines[i] == "[FileSearch.Directories]\n":
                        lines.insert(i+1, line_to_add)

        with open(GZDOOM_CONFIG_PATH, "w") as file:
            file.writelines(lines)

    # also check the config directories are also set
    with open(GZDOOM_CONFIG_PATH, "r") as file:
        lines = file.readlines()
        if GZDOOM_FM_BANKS_PATH not in lines:
            for i in range(len(lines)):
                if lines[i] == "[SoundfontSearch.Directories]\n":
                    lines.insert(i+1, GZDOOM_FM_BANKS_PATH)

        if GZDOOM_SOUND_FONT_PATH not in lines:
            for i in range(len(lines)):
                if lines[i] == "[SoundfontSearch.Directories]\n":
                    lines.insert(i+1, GZDOOM_SOUND_FONT_PATH)

    with open(GZDOOM_CONFIG_PATH, "w") as file:
        file.writelines(lines)
