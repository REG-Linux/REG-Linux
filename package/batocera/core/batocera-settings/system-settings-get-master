#!/bin/bash

# this script can be used by values that can have a default value by board

KEY=
CONFFILE=
SYSCONFFILE="/usr/share/reglinux/sysconfigs/system.conf"

while [ $# -ne 0 ]
do
    case "${1}" in
	"-f")
	    shift
	    CONFFILE="${1}"
	    shift
	    ;;
	*)
	    KEY="${1}"
	    shift
    esac
done

# prefer the user value
if [ -n "${CONFFILE}" ]; then
    VALUE="$(/usr/bin/system-settings-get -f "${CONFFILE}" "${KEY}")"
else
    VALUE="$(/usr/bin/system-settings-get "${KEY}")"
fi
# when value is auto, ignore
if [ -n "${VALUE}" ] && [ "${VALUE}" != "auto" ]; then
    echo "${VALUE}"
    exit 0
fi

BOARD_MODEL=$(sed -z 's|[^A-Za-z0-9]|_|g' /sys/firmware/devicetree/base/model 2>/dev/null)
[ -z "${BOARD_MODEL}" ] && BOARD_MODEL=$(sed -z 's|[^A-Za-z0-9]|_|g' /sys/devices/virtual/dmi/id/product_name 2>/dev/null)
# fall back to board name if product name is not ideal
if [ -z "${BOARD_MODEL}" ] || [ "${BOARD_MODEL}" = "Default_string" ]; then
    BOARD_MODEL=$(sed -z 's|[^A-Za-z0-9]|_|g' /sys/devices/virtual/dmi/id/board_name 2>/dev/null)
fi

# prefer the board value
if [ -e "${SYSCONFFILE}.${BOARD_MODEL}" ]; then
    VALUE="$(/usr/bin/system-settings-get -f "${SYSCONFFILE}.${BOARD_MODEL}" "${KEY}")"
    # when value is auto, ignore
    if [ -n "${VALUE}" ] && [ "${VALUE}" != "auto" ]; then
        echo "${VALUE}"
        exit 0
    fi
fi

# fall back to the general value
[ -e "${SYSCONFFILE}" ] && /usr/bin/system-settings-get -f "${SYSCONFFILE}" "${KEY}" && exit 0

exit 1
