--- a/cmake/Pcsx2Utils.cmake	2025-03-25 17:59:11.648969337 +0100
+++ b/cmake/Pcsx2Utils.cmake	2025-03-25 18:02:44.762626099 +0100
@@ -224,67 +224,14 @@
 endfunction()
 
 function(detect_page_size)
-	message(STATUS "Determining host page size")
-	set(detect_page_size_file ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/src.c)
-	file(WRITE ${detect_page_size_file} "
-#include <stdio.h>
-#include <stdlib.h>
-#include <unistd.h>
-int main() {
-	int res = sysconf(_SC_PAGESIZE);
-	printf(\"%d\", res);
-	return (res > 0) ? EXIT_SUCCESS : EXIT_FAILURE;
-}")
-	try_run(
-		detect_page_size_run_result
-		detect_page_size_compile_result
-		${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}
-		${detect_page_size_file}
-		RUN_OUTPUT_VARIABLE detect_page_size_output)
-	if(NOT detect_page_size_compile_result OR NOT detect_page_size_run_result EQUAL 0 OR CMAKE_CROSSCOMPILING)
-		message(FATAL_ERROR "Could not determine host page size.")
-	else()
-		message(STATUS "Host page size: ${detect_page_size_output}")
-		set(HOST_PAGE_SIZE ${detect_page_size_output} CACHE STRING "Reported host page size")
-	endif()
+	message(STATUS "Setting host page size to 4096")
+	set(HOST_PAGE_SIZE 4096 CACHE STRING "Reported host page size")
 endfunction()
 
 function(detect_cache_line_size)
-	message(STATUS "Determining host cache line size")
-	set(detect_cache_line_size_file ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/src.c)
-	file(WRITE ${detect_cache_line_size_file} "
-#include <stdio.h>
-#include <stdlib.h>
-#include <unistd.h>
-int main() {
-	int l1i = sysconf(_SC_LEVEL1_DCACHE_LINESIZE);
-	int l1d = sysconf(_SC_LEVEL1_ICACHE_LINESIZE);
-	int res = (l1i > l1d) ? l1i : l1d;
-	for (int index = 0; index < 16; index++) {
-		char buf[128];
-		snprintf(buf, sizeof(buf), \"/sys/devices/system/cpu/cpu0/cache/index%d/coherency_line_size\", index);
-		FILE* fp = fopen(buf, \"rb\");
-		if (!fp)
-			break;
-		fread(buf, sizeof(buf), 1, fp);
-		fclose(fp);
-		int val = atoi(buf);
-		res = (val > res) ? val : res;
-	}
-	printf(\"%d\", res);
-	return (res > 0) ? EXIT_SUCCESS : EXIT_FAILURE;
-}")
-	try_run(
-		detect_cache_line_size_run_result
-		detect_cache_line_size_compile_result
-		${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}
-		${detect_cache_line_size_file}
-		RUN_OUTPUT_VARIABLE detect_cache_line_size_output)
-	if(NOT detect_cache_line_size_compile_result OR NOT detect_cache_line_size_run_result EQUAL 0 OR CMAKE_CROSSCOMPILING)
-		message(FATAL_ERROR "Could not determine host cache line size.")
-	else()
-		message(STATUS "Host cache line size: ${detect_cache_line_size_output}")
-		set(HOST_CACHE_LINE_SIZE ${detect_cache_line_size_output} CACHE STRING "Reported host cache line size")
+	if(TRUE)
+		message(STATUS "Setting cache line size to 64")
+		set(HOST_CACHE_LINE_SIZE 64 CACHE STRING "Reported host cache line size")
 	endif()
 endfunction()
 
