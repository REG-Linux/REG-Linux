--- a/cmake/BuildParameters.cmake	2025-03-25 17:50:43.478849798 +0100
+++ b/cmake/BuildParameters.cmake	2025-03-25 17:51:32.772929868 +0100
@@ -105,11 +105,12 @@
 		endif()
 	endif()
 elseif("${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "arm64" OR "${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "aarch64" OR
+       "${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "arm64" OR "${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "aarch64" OR
        "${CMAKE_OSX_ARCHITECTURES}" STREQUAL "arm64")
-	message(STATUS "Building for Apple Silicon (ARM64).")
+	message(STATUS "Building for ARM64")
 	list(APPEND PCSX2_DEFS _M_ARM64=1)
 	set(_M_ARM64 TRUE)
-	add_compile_options("-march=armv8.4-a" "-mcpu=apple-m1")
+	add_compile_options("-march=armv8.2-a")
 
 	# If we're running on Linux, we need to detect the page/cache line size.
 	# It could be a virtual machine with 4K pages, or 16K with Asahi.
--- a/cmake/BuildParameters.cmake	2025-03-25 17:56:29.213417946 +0100
+++ b/cmake/BuildParameters.cmake	2025-03-25 17:56:45.113765678 +0100
@@ -72,39 +72,7 @@
 #-------------------------------------------------------------------------------
 # Select the architecture
 #-------------------------------------------------------------------------------
-if("${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "x86_64" OR "${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "amd64" OR
-   "${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "AMD64" OR "${CMAKE_OSX_ARCHITECTURES}" STREQUAL "x86_64")
-	# Multi-ISA only exists on x86.
-	option(DISABLE_ADVANCE_SIMD "Disable advance use of SIMD (SSE2+ & AVX)" OFF)
-
-	list(APPEND PCSX2_DEFS _M_X86=1)
-	set(_M_X86 TRUE)
-	if(DISABLE_ADVANCE_SIMD)
-		message(STATUS "Building for x86-64 (Multi-ISA).")
-	else()
-		message(STATUS "Building for x86-64.")
-	endif()
-
-	if(MSVC)
-		# SSE4.1 is not set by MSVC, it uses _M_SSE instead.
-		list(APPEND PCSX2_DEFS __SSE4_1__=1)
-
-		if(USE_CLANG_CL)
-			# clang-cl => need to explicitly enable SSE4.1.
-			add_compile_options("-msse4.1")
-		endif()
-	else()
-		# Multi-ISA => SSE4, otherwise native.
-		if (DISABLE_ADVANCE_SIMD)
-			add_compile_options("-msse" "-msse2" "-msse4.1" "-mfxsr")
-		else()
-			# Can't use march=native on Apple Silicon.
-			if(NOT APPLE OR "${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "x86_64")
-				add_compile_options("-march=native")
-			endif()
-		endif()
-	endif()
-elseif("${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "arm64" OR "${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "aarch64" OR
+if("${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "arm64" OR "${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "aarch64" OR
        "${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "arm64" OR "${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "aarch64" OR
        "${CMAKE_OSX_ARCHITECTURES}" STREQUAL "arm64")
 	message(STATUS "Building for ARM64")
