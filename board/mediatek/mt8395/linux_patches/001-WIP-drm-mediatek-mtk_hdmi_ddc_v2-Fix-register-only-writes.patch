diff --git a/drivers/gpu/drm/mediatek/mtk_hdmi_ddc_v2.c b/drivers/gpu/drm/mediatek/mtk_hdmi_ddc_v2.c
index a5d44c9c7735a46d37cf6770d0143d182242b3d7..fa094021a4cb71bfdb98a71017c37ea6cce81cce 100644
--- a/drivers/gpu/drm/mediatek/mtk_hdmi_ddc_v2.c
+++ b/drivers/gpu/drm/mediatek/mtk_hdmi_ddc_v2.c
@@ -67,7 +67,7 @@ static int mtk_ddc_check_and_rise_low_bus(struct mtk_hdmi_ddc *ddc)
 }
 
 static int mtk_ddc_wr_one(struct mtk_hdmi_ddc *ddc, u16 addr_id,
-			  u16 offset_id, u8 wr_data)
+			  u16 offset_id, u8 *wr_data)
 {
 	u32 val;
 	int ret;
@@ -78,14 +78,16 @@ static int mtk_ddc_wr_one(struct mtk_hdmi_ddc *ddc, u16 addr_id,
 	regmap_update_bits(ddc->regs, HPD_DDC_CTRL, HPD_DDC_DELAY_CNT,
 			   FIELD_PREP(HPD_DDC_DELAY_CNT, DDC2_DLY_CNT));
 
-	regmap_write(ddc->regs, SI2C_CTRL,
-		     FIELD_PREP(SI2C_ADDR, SI2C_ADDR_READ) |
-		     FIELD_PREP(SI2C_WDATA, wr_data) |
-		     SI2C_WR);
+	if (wr_data != NULL) {
+		regmap_write(ddc->regs, SI2C_CTRL,
+			     FIELD_PREP(SI2C_ADDR, SI2C_ADDR_READ) |
+			     FIELD_PREP(SI2C_WDATA, *wr_data) |
+			     SI2C_WR);
+	}
 
 	regmap_write(ddc->regs, DDC_CTRL,
 		     FIELD_PREP(DDC_CTRL_CMD, DDC_CMD_SEQ_WRITE) |
-		     FIELD_PREP(DDC_CTRL_DIN_CNT, 1) |
+		     FIELD_PREP(DDC_CTRL_DIN_CNT, wr_data == NULL ? 0 : 1) |
 		     FIELD_PREP(DDC_CTRL_OFFSET, offset_id) |
 		     FIELD_PREP(DDC_CTRL_ADDR, addr_id));
 	usleep_range(1000, 1250);
@@ -247,14 +249,18 @@ static int mtk_hdmi_fg_ddc_data_read(struct mtk_hdmi_ddc *ddc, u16 b_dev,
 static int mtk_hdmi_ddc_fg_data_write(struct mtk_hdmi_ddc *ddc, u16 b_dev,
 				      u8 data_addr, u16 data_cnt, u8 *pr_data)
 {
-	int i = 0, ret;
-
 	regmap_set_bits(ddc->regs, HDCP2X_POL_CTRL, HDCP2X_DIS_POLL_EN);
-	do {
-		ret = mtk_ddc_wr_one(ddc, b_dev, data_addr + i, pr_data[i]);
-		if (ret)
-			return ret;
-	} while (++i < data_cnt);
+	if (data_cnt == 0) {
+		return mtk_ddc_wr_one(ddc, b_dev, data_addr, NULL);
+	} else {
+		int i = 0, ret;
+
+		do {
+			ret = mtk_ddc_wr_one(ddc, b_dev, data_addr + i, pr_data + i);
+			if (ret)
+				return ret;
+		} while (++i < data_cnt);
+	}
 
 	return 0;
 }
